@page "/AgregarTipoProducto"
@page "/AgregarTipoProducto/{Id:int}"
@using Model
@using Interfaces
@inject ITipoProductoService TipoProductoService
@inject NavigationManager NavigationManager
    <link href="/css/add.css" rel="stylesheet" />
    <div class="container">
        <br>
        <br>
        <br>
        <br>
        <h1 class="titulo">Agregar Tipo de Producto</h1>
        <br>
        <br>
        <div class="input-group mb-3">
            <input type="text" @bind="TipoProducto.NombreProducto" class="form-control" id="tipoproducto" aria-describedby="inputGroup-sizing-default" placeholder="Nombre de Tipo Producto:" required>
        </div>
        <div style="text-align: center; margin-left: auto; margin-right: auto;  padding-top: 25px;">
            <button type="button" class="btn" id="agregar" @onclick="SaveTipoProducto">Agregar</button>
            <button type="button" class="btn" id="cancelar" @onclick="CancelTipoProducto">Cancelar</button>
        </div>
    </div>

    @code {
            [Parameter]
            public int Id { get; set; }
            TipoProducto TipoProducto = new TipoProducto();
            protected void CancelTipoProducto()
            {
                NavigationManager.NavigateTo("/TipoProducto");
            }
            protected async Task SaveTipoProducto()
            {
                await TipoProductoService.SaveTipoProducto(TipoProducto);
                NavigationManager.NavigateTo("/TipoProducto");
            }
         protected override async Task OnInitializedAsync()

        {
            if (Id == 0)
            {

            }
            else
            {
                TipoProducto = await TipoProductoService.GetTipoProductoDetails(Id);
            }
        }
    }
